# 创建一个名为 "aioveu-boot" 的桥接网络，在同一个网络中的容器可以通过容器名互相访问
networks:
  aioveu-boot:
    driver: bridge

services:
  mysql:
    image: mysql:8.0.29
    container_name: aioveu-boot-mysql
    restart: unless-stopped # 重启策略：除非手动停止容器，否则自动重启
    environment:
      - TZ=Asia/Shanghai
      - LANG= en_US.UTF-8
      - MYSQL_ROOT_PASSWORD=775825 #设置 root 用户的密码   默认密码123456存储在mysql-data里，重建容器要把data清空
    volumes:
      - ./mysql/conf/my.cnf:/etc/my.cnf # 挂载 my.cnf 文件到容器的指定路径
      - ./mysql/data:/var/lib/mysql # 持久化 MySQL 数据
      - ../sql/mysql:/docker-entrypoint-initdb.d # 初始化 SQL 脚本目录
    ports:
      - 3309:3306
    networks:
      - aioveu-boot # 加入 "aioveu-boot" 网络

  redis:
    image: redis:7.2.3
    container_name: aioveu-boot-redis
    restart: unless-stopped
    command: redis-server /etc/redis/redis.conf  # 启动 Redis 服务并添加密码为：123456，默认不开启 Redis AOF 方式持久化配置
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./redis/data:/data
      - ./redis/config/redis.conf:/etc/redis/redis.conf
    ports:
      - 6381:6379
    networks:
      - aioveu-boot

  minio:
#    image: minio/minio:latest
    image: minio/minio:RELEASE.2024-07-16T23-46-41Z   #选择可编辑桶的minio镜像版本
    container_name: aioveu-boot-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    ports:
      - 9000:9000  # API端口直接对外暴露
      - 9001:9001  # 控制台端口直接对外暴露
    environment:
      - TZ=Asia/Shanghai
      - LANG=en_US.UTF-8
#      - MINIO_ROOT_USER=minioadmin
#      - MINIO_ROOT_PASSWORD=minioadmin
      #解决 MinIO 默认凭证安全警告
      #这个警告表明您的 MinIO 实例正在使用默认管理员凭证（minioadmin:minioadmin），这会造成严重的安全风险。
      #MINIO_DOMAIN 环境变量是解决路径问题的核心配置
      #正确配置MinIO域别名 (Domain Alias)
      #这是MinIO特有的配置需求，需要明确告知MinIO "当通过反向代理访问时，请使用什么域名作为对象的基础URL
      # --- 域名代理关键配置 ---
      - MINIO_DOMAIN= minio.aioveu.com   #在启动MinIO容器时，添加环境变量  指定域名 或者，如果你使用的是MinIO的配置文件，可以在config.env中设置
      - MINIO_SERVER_URL= https://minio.aioveu.com       # 对象的外部访问URL
      - MINIO_ROOT_USER=minioaioveu
      - MINIO_ROOT_PASSWORD=minioaioveu
      - MINIO_BROWSER_REDIRECT_URL=https://love.aioveu.com  # 重要！
      - MINIO_BROWSER_WS_PATH=/ws/objectManager
    volumes:
       # 不再挂载配置文件
#      - type: bind
#        source: ./minio/config/config.json
#        target: /root/.minio/config.json
      - ./minio/data:/data
    networks:
      - aioveu-boot



    # --- 配置环境变量文件 (.env) ---
    # 创建.env文件（与docker-compose.yml同级）
    # MINIO_ROOT_USER=admin
    # MINIO_ROOT_PASSWORD=strongpassword123!
    # 注意：文件不要提交到版本控制！

  xxl-job-admin:
    image: xuxueli/xxl-job-admin:2.4.0
    container_name: aioveu-boot-xxl-job-admin
    restart: unless-stopped
    environment:
      PARAMS: '--spring.datasource.url=jdbc:mysql://mysql:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai --spring.datasource.username=root --spring.datasource.password=775825 --spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver'
    volumes:
      - ./xxljob/logs:/data/applogs
    ports:
      - 8080:8080
    networks:
      - aioveu-boot

  aioveu-boot:
    image: aioveu-boot:v1.1.4
    pull_policy: never  # 关键设置，即使本地已有镜像，Docker Compose 在启动时仍尝试连接远程仓库
    container_name: aioveu-boot
    #    build:
    #      context: .
    #      dockerfile: Dockerfile
    ports:
      - 8989:8989
    networks:
      - aioveu-boot
    depends_on:
      - mysql


  aioveu-nginx:
    image: nginx    #使用的镜像名称
    container_name: aioveu-nginx #给容器指定一个名称，方便以后引用。
    restart: unless-stopped
    #    build:
    #      context: .
    #      dockerfile: Dockerfile
    volumes:
#      - /mnt/nginx/conf/nginx.conf:/etc/nginx/nginx.conf   #挂载主配置文件
#      - /mnt/nginx/html:/usr/share/nginx/html         #挂载网站文件
#      - /mnt/nginx/logs:/var/log/nginx/               #持久化存储日志
#      - /mnt/nginx/ssl:/etc/nginx/ssl                 #挂载SSL证书
      #
#      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf   #挂载主配置文件
      # 关键修复：明确指定文件挂载
      - type: bind
        source: ./nginx/conf/nginx.conf
        target: /etc/nginx/nginx.conf
#        read_only: true

      # 配置文件目录挂载
#      - type: bind
#        source: ./nginx/conf.d
#        target: /etc/nginx/conf.d
#        read_only: true

      # SSL证书目录
#      - type: bind
#        source: ./nginx/ssl
#        target: /etc/nginx/ssl
##        read_only: true


      - ./nginx/html:/usr/share/nginx/html         #挂载网站文件
      - ./nginx/logs:/var/log/nginx/               #持久化存储日志
      - ./nginx/ssl:/etc/nginx/ssl                 #挂载SSL证书

      #/usr/share/nginx/html nginx配置文件的html路径要与映射路径一致

    ports:
      - 80:80    #表示将nginx容器的80端口映射到宿主机的80端口。格式为宿主机端口:容器端口
    networks:
      - aioveu-boot
    depends_on:
      - mysql
        #新加载Nginx配置
        #sudo nginx -s reload